version: '3'
#Docker Networks
networks:
  app-network:
      name: docker-test
      driver: bridge

services:
  #app
  site:
    build:
      context: .
      dockerfile: nginx.dockerfile
    container_name: nginx
    ports:
      - 9099:80
    volumes:
      - ./app:/var/www/html:delegated
    depends_on:
      - php
      - redis
      - mysql
      - mongodb
      # - mailhog
    networks:
      - app-network
  
  #mysql
  mysql:
    image: mysql:5.7.29
    container_name: mysql
    restart: unless-stopped
    tty: true
    ports:
      - 3307:3306
    environment:
      MYSQL_USER: homestead
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: secret
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
      MYSQL_DATABASE: homestead
    networks:
      - app-network
    volumes:
      - ./db_data/mysql:/var/lib/mysql
      - ./db_data/init_mysql/:/docker-entrypoint-initdb.d
  
  #mongo
  mongodb:
    container_name: mongodb
    image: mongo:latest
    ports:
      - "27018:27017"
    networks:
      - app-network
    volumes:
      - ./db_data/mongo:/data/db

  #redis
  redis:
    image: redis:alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - 6378:6379
    networks:
      - app-network
  
  #php
  php:
    build:
      context: .
      dockerfile: php.dockerfile
    container_name: php
    volumes:
      - ./app:/var/www/html:delegated
    networks:
      - app-network
  
  #composer
  composer:
    build:
      context: .
      dockerfile: composer.dockerfile
    container_name: composer
    volumes:
      - ./app:/var/www/html
    working_dir: /var/www/html
    depends_on:
      - php
    user: laravel
    entrypoint: ['composer', '--ignore-platform-reqs']
    networks:
      - app-network

  #node
  npm:
    image: node:13.7
    container_name: npm
    volumes:
      - ./app:/var/www/html
    ports:
      - 3000:3000
      - 3001:3001
    working_dir: /var/www/html
    entrypoint: ['npm']
    networks:
      - app-network

  #composer
  artisan:
    build:
      context: .
      dockerfile: php.dockerfile
    container_name: artisan
    volumes:
      - ./app:/var/www/html:delegated
    depends_on:
      - mysql
    working_dir: /var/www/html
    user: laravel
    entrypoint: ['php', '/var/www/html/artisan']
    networks:
      - app-network

  # mailhog:
  #   image: mailhog/mailhog:latest
  #   container_name: mailhog
  #   ports:
  #     - 1025:1025
  #     - 8025:8025
  #   networks:
  #     - laravel
